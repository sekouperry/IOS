// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Base.pb.h"

@implementation BaseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BaseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ErrorRes ()
@property int32_t status;
@property int32_t category;
@property (retain) NSString* title;
@property (retain) NSString* tip;
@end

@implementation ErrorRes

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasTip {
  return !!hasTip_;
}
- (void) setHasTip:(BOOL) value {
  hasTip_ = !!value;
}
@synthesize tip;
- (void) dealloc {
  self.title = nil;
  self.tip = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.status = 0;
    self.category = 0;
    self.title = @"";
    self.tip = @"";
  }
  return self;
}
static ErrorRes* defaultErrorResInstance = nil;
+ (void) initialize {
  if (self == [ErrorRes class]) {
    defaultErrorResInstance = [[ErrorRes alloc] init];
  }
}
+ (ErrorRes*) defaultInstance {
  return defaultErrorResInstance;
}
- (ErrorRes*) defaultInstance {
  return defaultErrorResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasCategory) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasTip) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeInt32:1 value:self.status];
  }
  if (self.hasCategory) {
    [output writeInt32:2 value:self.category];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasTip) {
    [output writeString:4 value:self.tip];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStatus) {
    size += computeInt32Size(1, self.status);
  }
  if (self.hasCategory) {
    size += computeInt32Size(2, self.category);
  }
  if (self.hasTitle) {
    size += computeStringSize(3, self.title);
  }
  if (self.hasTip) {
    size += computeStringSize(4, self.tip);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ErrorRes*) parseFromData:(NSData*) data {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromData:data] build];
}
+ (ErrorRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ErrorRes*) parseFromInputStream:(NSInputStream*) input {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromInputStream:input] build];
}
+ (ErrorRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ErrorRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromCodedInputStream:input] build];
}
+ (ErrorRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorRes*)[[[ErrorRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ErrorRes_Builder*) builder {
  return [[[ErrorRes_Builder alloc] init] autorelease];
}
+ (ErrorRes_Builder*) builderWithPrototype:(ErrorRes*) prototype {
  return [[ErrorRes builder] mergeFrom:prototype];
}
- (ErrorRes_Builder*) builder {
  return [ErrorRes builder];
}
@end

@interface ErrorRes_Builder()
@property (retain) ErrorRes* result;
@end

@implementation ErrorRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ErrorRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ErrorRes_Builder*) clear {
  self.result = [[[ErrorRes alloc] init] autorelease];
  return self;
}
- (ErrorRes_Builder*) clone {
  return [ErrorRes builderWithPrototype:result];
}
- (ErrorRes*) defaultInstance {
  return [ErrorRes defaultInstance];
}
- (ErrorRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ErrorRes*) buildPartial {
  ErrorRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ErrorRes_Builder*) mergeFrom:(ErrorRes*) other {
  if (other == [ErrorRes defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasTip) {
    [self setTip:other.tip];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ErrorRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ErrorRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 16: {
        [self setCategory:[input readInt32]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 34: {
        [self setTip:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (ErrorRes_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ErrorRes_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (int32_t) category {
  return result.category;
}
- (ErrorRes_Builder*) setCategory:(int32_t) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (ErrorRes_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (ErrorRes_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (ErrorRes_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasTip {
  return result.hasTip;
}
- (NSString*) tip {
  return result.tip;
}
- (ErrorRes_Builder*) setTip:(NSString*) value {
  result.hasTip = YES;
  result.tip = value;
  return self;
}
- (ErrorRes_Builder*) clearTip {
  result.hasTip = NO;
  result.tip = @"";
  return self;
}
@end

