// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Prize.pb.h"

@implementation PrizeRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PrizeRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface GetPrizeListReq ()
@property int64_t prizeId;
@property int32_t count;
@end

@implementation GetPrizeListReq

- (BOOL) hasPrizeId {
  return !!hasPrizeId_;
}
- (void) setHasPrizeId:(BOOL) value {
  hasPrizeId_ = !!value;
}
@synthesize prizeId;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) value {
  hasCount_ = !!value;
}
@synthesize count;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.prizeId = 0L;
    self.count = 0;
  }
  return self;
}
static GetPrizeListReq* defaultGetPrizeListReqInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeListReq class]) {
    defaultGetPrizeListReqInstance = [[GetPrizeListReq alloc] init];
  }
}
+ (GetPrizeListReq*) defaultInstance {
  return defaultGetPrizeListReqInstance;
}
- (GetPrizeListReq*) defaultInstance {
  return defaultGetPrizeListReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPrizeId) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrizeId) {
    [output writeInt64:1 value:self.prizeId];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPrizeId) {
    size += computeInt64Size(1, self.prizeId);
  }
  if (self.hasCount) {
    size += computeInt32Size(2, self.count);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeListReq*) parseFromData:(NSData*) data {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromData:data] build];
}
+ (GetPrizeListReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromInputStream:input] build];
}
+ (GetPrizeListReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListReq*)[[[GetPrizeListReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListReq_Builder*) builder {
  return [[[GetPrizeListReq_Builder alloc] init] autorelease];
}
+ (GetPrizeListReq_Builder*) builderWithPrototype:(GetPrizeListReq*) prototype {
  return [[GetPrizeListReq builder] mergeFrom:prototype];
}
- (GetPrizeListReq_Builder*) builder {
  return [GetPrizeListReq builder];
}
@end

@interface GetPrizeListReq_Builder()
@property (retain) GetPrizeListReq* result;
@end

@implementation GetPrizeListReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeListReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeListReq_Builder*) clear {
  self.result = [[[GetPrizeListReq alloc] init] autorelease];
  return self;
}
- (GetPrizeListReq_Builder*) clone {
  return [GetPrizeListReq builderWithPrototype:result];
}
- (GetPrizeListReq*) defaultInstance {
  return [GetPrizeListReq defaultInstance];
}
- (GetPrizeListReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeListReq*) buildPartial {
  GetPrizeListReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeListReq_Builder*) mergeFrom:(GetPrizeListReq*) other {
  if (other == [GetPrizeListReq defaultInstance]) {
    return self;
  }
  if (other.hasPrizeId) {
    [self setPrizeId:other.prizeId];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeListReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeListReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPrizeId:[input readInt64]];
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPrizeId {
  return result.hasPrizeId;
}
- (int64_t) prizeId {
  return result.prizeId;
}
- (GetPrizeListReq_Builder*) setPrizeId:(int64_t) value {
  result.hasPrizeId = YES;
  result.prizeId = value;
  return self;
}
- (GetPrizeListReq_Builder*) clearPrizeId {
  result.hasPrizeId = NO;
  result.prizeId = 0L;
  return self;
}
- (BOOL) hasCount {
  return result.hasCount;
}
- (int32_t) count {
  return result.count;
}
- (GetPrizeListReq_Builder*) setCount:(int32_t) value {
  result.hasCount = YES;
  result.count = value;
  return self;
}
- (GetPrizeListReq_Builder*) clearCount {
  result.hasCount = NO;
  result.count = 0;
  return self;
}
@end

@interface PrizeInfo ()
@property int64_t prizeId;
@property (retain) NSString* prizeName;
@property (retain) NSString* prizeDesc;
@property int64_t createTime;
@property int32_t prizeStatus;
@property (retain) NSString* prizeImage;
@end

@implementation PrizeInfo

- (BOOL) hasPrizeId {
  return !!hasPrizeId_;
}
- (void) setHasPrizeId:(BOOL) value {
  hasPrizeId_ = !!value;
}
@synthesize prizeId;
- (BOOL) hasPrizeName {
  return !!hasPrizeName_;
}
- (void) setHasPrizeName:(BOOL) value {
  hasPrizeName_ = !!value;
}
@synthesize prizeName;
- (BOOL) hasPrizeDesc {
  return !!hasPrizeDesc_;
}
- (void) setHasPrizeDesc:(BOOL) value {
  hasPrizeDesc_ = !!value;
}
@synthesize prizeDesc;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (BOOL) hasPrizeStatus {
  return !!hasPrizeStatus_;
}
- (void) setHasPrizeStatus:(BOOL) value {
  hasPrizeStatus_ = !!value;
}
@synthesize prizeStatus;
- (BOOL) hasPrizeImage {
  return !!hasPrizeImage_;
}
- (void) setHasPrizeImage:(BOOL) value {
  hasPrizeImage_ = !!value;
}
@synthesize prizeImage;
- (void) dealloc {
  self.prizeName = nil;
  self.prizeDesc = nil;
  self.prizeImage = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.prizeId = 0L;
    self.prizeName = @"";
    self.prizeDesc = @"";
    self.createTime = 0L;
    self.prizeStatus = 0;
    self.prizeImage = @"";
  }
  return self;
}
static PrizeInfo* defaultPrizeInfoInstance = nil;
+ (void) initialize {
  if (self == [PrizeInfo class]) {
    defaultPrizeInfoInstance = [[PrizeInfo alloc] init];
  }
}
+ (PrizeInfo*) defaultInstance {
  return defaultPrizeInfoInstance;
}
- (PrizeInfo*) defaultInstance {
  return defaultPrizeInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPrizeId) {
    return NO;
  }
  if (!self.hasPrizeName) {
    return NO;
  }
  if (!self.hasPrizeDesc) {
    return NO;
  }
  if (!self.hasCreateTime) {
    return NO;
  }
  if (!self.hasPrizeStatus) {
    return NO;
  }
  if (!self.hasPrizeImage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrizeId) {
    [output writeInt64:1 value:self.prizeId];
  }
  if (self.hasPrizeName) {
    [output writeString:2 value:self.prizeName];
  }
  if (self.hasPrizeDesc) {
    [output writeString:3 value:self.prizeDesc];
  }
  if (self.hasCreateTime) {
    [output writeInt64:4 value:self.createTime];
  }
  if (self.hasPrizeStatus) {
    [output writeInt32:5 value:self.prizeStatus];
  }
  if (self.hasPrizeImage) {
    [output writeString:6 value:self.prizeImage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPrizeId) {
    size += computeInt64Size(1, self.prizeId);
  }
  if (self.hasPrizeName) {
    size += computeStringSize(2, self.prizeName);
  }
  if (self.hasPrizeDesc) {
    size += computeStringSize(3, self.prizeDesc);
  }
  if (self.hasCreateTime) {
    size += computeInt64Size(4, self.createTime);
  }
  if (self.hasPrizeStatus) {
    size += computeInt32Size(5, self.prizeStatus);
  }
  if (self.hasPrizeImage) {
    size += computeStringSize(6, self.prizeImage);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PrizeInfo*) parseFromData:(NSData*) data {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromData:data] build];
}
+ (PrizeInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrizeInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromInputStream:input] build];
}
+ (PrizeInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrizeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PrizeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeInfo*)[[[PrizeInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrizeInfo_Builder*) builder {
  return [[[PrizeInfo_Builder alloc] init] autorelease];
}
+ (PrizeInfo_Builder*) builderWithPrototype:(PrizeInfo*) prototype {
  return [[PrizeInfo builder] mergeFrom:prototype];
}
- (PrizeInfo_Builder*) builder {
  return [PrizeInfo builder];
}
@end

@interface PrizeInfo_Builder()
@property (retain) PrizeInfo* result;
@end

@implementation PrizeInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PrizeInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrizeInfo_Builder*) clear {
  self.result = [[[PrizeInfo alloc] init] autorelease];
  return self;
}
- (PrizeInfo_Builder*) clone {
  return [PrizeInfo builderWithPrototype:result];
}
- (PrizeInfo*) defaultInstance {
  return [PrizeInfo defaultInstance];
}
- (PrizeInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrizeInfo*) buildPartial {
  PrizeInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PrizeInfo_Builder*) mergeFrom:(PrizeInfo*) other {
  if (other == [PrizeInfo defaultInstance]) {
    return self;
  }
  if (other.hasPrizeId) {
    [self setPrizeId:other.prizeId];
  }
  if (other.hasPrizeName) {
    [self setPrizeName:other.prizeName];
  }
  if (other.hasPrizeDesc) {
    [self setPrizeDesc:other.prizeDesc];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasPrizeStatus) {
    [self setPrizeStatus:other.prizeStatus];
  }
  if (other.hasPrizeImage) {
    [self setPrizeImage:other.prizeImage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrizeInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrizeInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPrizeId:[input readInt64]];
        break;
      }
      case 18: {
        [self setPrizeName:[input readString]];
        break;
      }
      case 26: {
        [self setPrizeDesc:[input readString]];
        break;
      }
      case 32: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setPrizeStatus:[input readInt32]];
        break;
      }
      case 50: {
        [self setPrizeImage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPrizeId {
  return result.hasPrizeId;
}
- (int64_t) prizeId {
  return result.prizeId;
}
- (PrizeInfo_Builder*) setPrizeId:(int64_t) value {
  result.hasPrizeId = YES;
  result.prizeId = value;
  return self;
}
- (PrizeInfo_Builder*) clearPrizeId {
  result.hasPrizeId = NO;
  result.prizeId = 0L;
  return self;
}
- (BOOL) hasPrizeName {
  return result.hasPrizeName;
}
- (NSString*) prizeName {
  return result.prizeName;
}
- (PrizeInfo_Builder*) setPrizeName:(NSString*) value {
  result.hasPrizeName = YES;
  result.prizeName = value;
  return self;
}
- (PrizeInfo_Builder*) clearPrizeName {
  result.hasPrizeName = NO;
  result.prizeName = @"";
  return self;
}
- (BOOL) hasPrizeDesc {
  return result.hasPrizeDesc;
}
- (NSString*) prizeDesc {
  return result.prizeDesc;
}
- (PrizeInfo_Builder*) setPrizeDesc:(NSString*) value {
  result.hasPrizeDesc = YES;
  result.prizeDesc = value;
  return self;
}
- (PrizeInfo_Builder*) clearPrizeDesc {
  result.hasPrizeDesc = NO;
  result.prizeDesc = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (PrizeInfo_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (PrizeInfo_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
- (BOOL) hasPrizeStatus {
  return result.hasPrizeStatus;
}
- (int32_t) prizeStatus {
  return result.prizeStatus;
}
- (PrizeInfo_Builder*) setPrizeStatus:(int32_t) value {
  result.hasPrizeStatus = YES;
  result.prizeStatus = value;
  return self;
}
- (PrizeInfo_Builder*) clearPrizeStatus {
  result.hasPrizeStatus = NO;
  result.prizeStatus = 0;
  return self;
}
- (BOOL) hasPrizeImage {
  return result.hasPrizeImage;
}
- (NSString*) prizeImage {
  return result.prizeImage;
}
- (PrizeInfo_Builder*) setPrizeImage:(NSString*) value {
  result.hasPrizeImage = YES;
  result.prizeImage = value;
  return self;
}
- (PrizeInfo_Builder*) clearPrizeImage {
  result.hasPrizeImage = NO;
  result.prizeImage = @"";
  return self;
}
@end

@interface GetPrizeListRes ()
@property (retain) NSMutableArray* mutablePrizeInfosList;
@end

@implementation GetPrizeListRes

@synthesize mutablePrizeInfosList;
- (void) dealloc {
  self.mutablePrizeInfosList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static GetPrizeListRes* defaultGetPrizeListResInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeListRes class]) {
    defaultGetPrizeListResInstance = [[GetPrizeListRes alloc] init];
  }
}
+ (GetPrizeListRes*) defaultInstance {
  return defaultGetPrizeListResInstance;
}
- (GetPrizeListRes*) defaultInstance {
  return defaultGetPrizeListResInstance;
}
- (NSArray*) prizeInfosList {
  return mutablePrizeInfosList;
}
- (PrizeInfo*) prizeInfosAtIndex:(int32_t) index {
  id value = [mutablePrizeInfosList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (PrizeInfo* element in self.prizeInfosList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (PrizeInfo* element in self.prizeInfosList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (PrizeInfo* element in self.prizeInfosList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeListRes*) parseFromData:(NSData*) data {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromData:data] build];
}
+ (GetPrizeListRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromInputStream:input] build];
}
+ (GetPrizeListRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeListRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeListRes*)[[[GetPrizeListRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeListRes_Builder*) builder {
  return [[[GetPrizeListRes_Builder alloc] init] autorelease];
}
+ (GetPrizeListRes_Builder*) builderWithPrototype:(GetPrizeListRes*) prototype {
  return [[GetPrizeListRes builder] mergeFrom:prototype];
}
- (GetPrizeListRes_Builder*) builder {
  return [GetPrizeListRes builder];
}
@end

@interface GetPrizeListRes_Builder()
@property (retain) GetPrizeListRes* result;
@end

@implementation GetPrizeListRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeListRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeListRes_Builder*) clear {
  self.result = [[[GetPrizeListRes alloc] init] autorelease];
  return self;
}
- (GetPrizeListRes_Builder*) clone {
  return [GetPrizeListRes builderWithPrototype:result];
}
- (GetPrizeListRes*) defaultInstance {
  return [GetPrizeListRes defaultInstance];
}
- (GetPrizeListRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeListRes*) buildPartial {
  GetPrizeListRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeListRes_Builder*) mergeFrom:(GetPrizeListRes*) other {
  if (other == [GetPrizeListRes defaultInstance]) {
    return self;
  }
  if (other.mutablePrizeInfosList.count > 0) {
    if (result.mutablePrizeInfosList == nil) {
      result.mutablePrizeInfosList = [NSMutableArray array];
    }
    [result.mutablePrizeInfosList addObjectsFromArray:other.mutablePrizeInfosList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeListRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeListRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PrizeInfo_Builder* subBuilder = [PrizeInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrizeInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) prizeInfosList {
  if (result.mutablePrizeInfosList == nil) { return [NSArray array]; }
  return result.mutablePrizeInfosList;
}
- (PrizeInfo*) prizeInfosAtIndex:(int32_t) index {
  return [result prizeInfosAtIndex:index];
}
- (GetPrizeListRes_Builder*) replacePrizeInfosAtIndex:(int32_t) index with:(PrizeInfo*) value {
  [result.mutablePrizeInfosList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetPrizeListRes_Builder*) addAllPrizeInfos:(NSArray*) values {
  if (result.mutablePrizeInfosList == nil) {
    result.mutablePrizeInfosList = [NSMutableArray array];
  }
  [result.mutablePrizeInfosList addObjectsFromArray:values];
  return self;
}
- (GetPrizeListRes_Builder*) clearPrizeInfosList {
  result.mutablePrizeInfosList = nil;
  return self;
}
- (GetPrizeListRes_Builder*) addPrizeInfos:(PrizeInfo*) value {
  if (result.mutablePrizeInfosList == nil) {
    result.mutablePrizeInfosList = [NSMutableArray array];
  }
  [result.mutablePrizeInfosList addObject:value];
  return self;
}
@end

@interface GetPrizeMethodReq ()
@property int64_t prizeId;
@end

@implementation GetPrizeMethodReq

- (BOOL) hasPrizeId {
  return !!hasPrizeId_;
}
- (void) setHasPrizeId:(BOOL) value {
  hasPrizeId_ = !!value;
}
@synthesize prizeId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.prizeId = 0L;
  }
  return self;
}
static GetPrizeMethodReq* defaultGetPrizeMethodReqInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeMethodReq class]) {
    defaultGetPrizeMethodReqInstance = [[GetPrizeMethodReq alloc] init];
  }
}
+ (GetPrizeMethodReq*) defaultInstance {
  return defaultGetPrizeMethodReqInstance;
}
- (GetPrizeMethodReq*) defaultInstance {
  return defaultGetPrizeMethodReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPrizeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrizeId) {
    [output writeInt64:1 value:self.prizeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPrizeId) {
    size += computeInt64Size(1, self.prizeId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeMethodReq*) parseFromData:(NSData*) data {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromData:data] build];
}
+ (GetPrizeMethodReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromInputStream:input] build];
}
+ (GetPrizeMethodReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeMethodReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodReq*)[[[GetPrizeMethodReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodReq_Builder*) builder {
  return [[[GetPrizeMethodReq_Builder alloc] init] autorelease];
}
+ (GetPrizeMethodReq_Builder*) builderWithPrototype:(GetPrizeMethodReq*) prototype {
  return [[GetPrizeMethodReq builder] mergeFrom:prototype];
}
- (GetPrizeMethodReq_Builder*) builder {
  return [GetPrizeMethodReq builder];
}
@end

@interface GetPrizeMethodReq_Builder()
@property (retain) GetPrizeMethodReq* result;
@end

@implementation GetPrizeMethodReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeMethodReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeMethodReq_Builder*) clear {
  self.result = [[[GetPrizeMethodReq alloc] init] autorelease];
  return self;
}
- (GetPrizeMethodReq_Builder*) clone {
  return [GetPrizeMethodReq builderWithPrototype:result];
}
- (GetPrizeMethodReq*) defaultInstance {
  return [GetPrizeMethodReq defaultInstance];
}
- (GetPrizeMethodReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeMethodReq*) buildPartial {
  GetPrizeMethodReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeMethodReq_Builder*) mergeFrom:(GetPrizeMethodReq*) other {
  if (other == [GetPrizeMethodReq defaultInstance]) {
    return self;
  }
  if (other.hasPrizeId) {
    [self setPrizeId:other.prizeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeMethodReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeMethodReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPrizeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasPrizeId {
  return result.hasPrizeId;
}
- (int64_t) prizeId {
  return result.prizeId;
}
- (GetPrizeMethodReq_Builder*) setPrizeId:(int64_t) value {
  result.hasPrizeId = YES;
  result.prizeId = value;
  return self;
}
- (GetPrizeMethodReq_Builder*) clearPrizeId {
  result.hasPrizeId = NO;
  result.prizeId = 0L;
  return self;
}
@end

@interface PrizeTypeUnit ()
@property int32_t types;
@property int32_t prizeName;
@end

@implementation PrizeTypeUnit

- (BOOL) hasTypes {
  return !!hasTypes_;
}
- (void) setHasTypes:(BOOL) value {
  hasTypes_ = !!value;
}
@synthesize types;
- (BOOL) hasPrizeName {
  return !!hasPrizeName_;
}
- (void) setHasPrizeName:(BOOL) value {
  hasPrizeName_ = !!value;
}
@synthesize prizeName;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.types = 0;
    self.prizeName = 0;
  }
  return self;
}
static PrizeTypeUnit* defaultPrizeTypeUnitInstance = nil;
+ (void) initialize {
  if (self == [PrizeTypeUnit class]) {
    defaultPrizeTypeUnitInstance = [[PrizeTypeUnit alloc] init];
  }
}
+ (PrizeTypeUnit*) defaultInstance {
  return defaultPrizeTypeUnitInstance;
}
- (PrizeTypeUnit*) defaultInstance {
  return defaultPrizeTypeUnitInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTypes) {
    return NO;
  }
  if (!self.hasPrizeName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTypes) {
    [output writeInt32:1 value:self.types];
  }
  if (self.hasPrizeName) {
    [output writeInt32:2 value:self.prizeName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTypes) {
    size += computeInt32Size(1, self.types);
  }
  if (self.hasPrizeName) {
    size += computeInt32Size(2, self.prizeName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PrizeTypeUnit*) parseFromData:(NSData*) data {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromData:data] build];
}
+ (PrizeTypeUnit*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrizeTypeUnit*) parseFromInputStream:(NSInputStream*) input {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromInputStream:input] build];
}
+ (PrizeTypeUnit*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrizeTypeUnit*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromCodedInputStream:input] build];
}
+ (PrizeTypeUnit*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrizeTypeUnit*)[[[PrizeTypeUnit builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrizeTypeUnit_Builder*) builder {
  return [[[PrizeTypeUnit_Builder alloc] init] autorelease];
}
+ (PrizeTypeUnit_Builder*) builderWithPrototype:(PrizeTypeUnit*) prototype {
  return [[PrizeTypeUnit builder] mergeFrom:prototype];
}
- (PrizeTypeUnit_Builder*) builder {
  return [PrizeTypeUnit builder];
}
@end

@interface PrizeTypeUnit_Builder()
@property (retain) PrizeTypeUnit* result;
@end

@implementation PrizeTypeUnit_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PrizeTypeUnit alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrizeTypeUnit_Builder*) clear {
  self.result = [[[PrizeTypeUnit alloc] init] autorelease];
  return self;
}
- (PrizeTypeUnit_Builder*) clone {
  return [PrizeTypeUnit builderWithPrototype:result];
}
- (PrizeTypeUnit*) defaultInstance {
  return [PrizeTypeUnit defaultInstance];
}
- (PrizeTypeUnit*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrizeTypeUnit*) buildPartial {
  PrizeTypeUnit* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PrizeTypeUnit_Builder*) mergeFrom:(PrizeTypeUnit*) other {
  if (other == [PrizeTypeUnit defaultInstance]) {
    return self;
  }
  if (other.hasTypes) {
    [self setTypes:other.types];
  }
  if (other.hasPrizeName) {
    [self setPrizeName:other.prizeName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrizeTypeUnit_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrizeTypeUnit_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTypes:[input readInt32]];
        break;
      }
      case 16: {
        [self setPrizeName:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTypes {
  return result.hasTypes;
}
- (int32_t) types {
  return result.types;
}
- (PrizeTypeUnit_Builder*) setTypes:(int32_t) value {
  result.hasTypes = YES;
  result.types = value;
  return self;
}
- (PrizeTypeUnit_Builder*) clearTypes {
  result.hasTypes = NO;
  result.types = 0;
  return self;
}
- (BOOL) hasPrizeName {
  return result.hasPrizeName;
}
- (int32_t) prizeName {
  return result.prizeName;
}
- (PrizeTypeUnit_Builder*) setPrizeName:(int32_t) value {
  result.hasPrizeName = YES;
  result.prizeName = value;
  return self;
}
- (PrizeTypeUnit_Builder*) clearPrizeName {
  result.hasPrizeName = NO;
  result.prizeName = 0;
  return self;
}
@end

@interface GetPrizeMethodRes ()
@property (retain) NSMutableArray* mutablePrizeTypeUnitsList;
@end

@implementation GetPrizeMethodRes

@synthesize mutablePrizeTypeUnitsList;
- (void) dealloc {
  self.mutablePrizeTypeUnitsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static GetPrizeMethodRes* defaultGetPrizeMethodResInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeMethodRes class]) {
    defaultGetPrizeMethodResInstance = [[GetPrizeMethodRes alloc] init];
  }
}
+ (GetPrizeMethodRes*) defaultInstance {
  return defaultGetPrizeMethodResInstance;
}
- (GetPrizeMethodRes*) defaultInstance {
  return defaultGetPrizeMethodResInstance;
}
- (NSArray*) prizeTypeUnitsList {
  return mutablePrizeTypeUnitsList;
}
- (PrizeTypeUnit*) prizeTypeUnitsAtIndex:(int32_t) index {
  id value = [mutablePrizeTypeUnitsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (PrizeTypeUnit* element in self.prizeTypeUnitsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (PrizeTypeUnit* element in self.prizeTypeUnitsList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (PrizeTypeUnit* element in self.prizeTypeUnitsList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeMethodRes*) parseFromData:(NSData*) data {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromData:data] build];
}
+ (GetPrizeMethodRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromInputStream:input] build];
}
+ (GetPrizeMethodRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeMethodRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeMethodRes*)[[[GetPrizeMethodRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeMethodRes_Builder*) builder {
  return [[[GetPrizeMethodRes_Builder alloc] init] autorelease];
}
+ (GetPrizeMethodRes_Builder*) builderWithPrototype:(GetPrizeMethodRes*) prototype {
  return [[GetPrizeMethodRes builder] mergeFrom:prototype];
}
- (GetPrizeMethodRes_Builder*) builder {
  return [GetPrizeMethodRes builder];
}
@end

@interface GetPrizeMethodRes_Builder()
@property (retain) GetPrizeMethodRes* result;
@end

@implementation GetPrizeMethodRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeMethodRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeMethodRes_Builder*) clear {
  self.result = [[[GetPrizeMethodRes alloc] init] autorelease];
  return self;
}
- (GetPrizeMethodRes_Builder*) clone {
  return [GetPrizeMethodRes builderWithPrototype:result];
}
- (GetPrizeMethodRes*) defaultInstance {
  return [GetPrizeMethodRes defaultInstance];
}
- (GetPrizeMethodRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeMethodRes*) buildPartial {
  GetPrizeMethodRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeMethodRes_Builder*) mergeFrom:(GetPrizeMethodRes*) other {
  if (other == [GetPrizeMethodRes defaultInstance]) {
    return self;
  }
  if (other.mutablePrizeTypeUnitsList.count > 0) {
    if (result.mutablePrizeTypeUnitsList == nil) {
      result.mutablePrizeTypeUnitsList = [NSMutableArray array];
    }
    [result.mutablePrizeTypeUnitsList addObjectsFromArray:other.mutablePrizeTypeUnitsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeMethodRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeMethodRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PrizeTypeUnit_Builder* subBuilder = [PrizeTypeUnit builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrizeTypeUnits:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) prizeTypeUnitsList {
  if (result.mutablePrizeTypeUnitsList == nil) { return [NSArray array]; }
  return result.mutablePrizeTypeUnitsList;
}
- (PrizeTypeUnit*) prizeTypeUnitsAtIndex:(int32_t) index {
  return [result prizeTypeUnitsAtIndex:index];
}
- (GetPrizeMethodRes_Builder*) replacePrizeTypeUnitsAtIndex:(int32_t) index with:(PrizeTypeUnit*) value {
  [result.mutablePrizeTypeUnitsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetPrizeMethodRes_Builder*) addAllPrizeTypeUnits:(NSArray*) values {
  if (result.mutablePrizeTypeUnitsList == nil) {
    result.mutablePrizeTypeUnitsList = [NSMutableArray array];
  }
  [result.mutablePrizeTypeUnitsList addObjectsFromArray:values];
  return self;
}
- (GetPrizeMethodRes_Builder*) clearPrizeTypeUnitsList {
  result.mutablePrizeTypeUnitsList = nil;
  return self;
}
- (GetPrizeMethodRes_Builder*) addPrizeTypeUnits:(PrizeTypeUnit*) value {
  if (result.mutablePrizeTypeUnitsList == nil) {
    result.mutablePrizeTypeUnitsList = [NSMutableArray array];
  }
  [result.mutablePrizeTypeUnitsList addObject:value];
  return self;
}
@end

@interface GetPrizeReq ()
@property int64_t prizeId;
@property int32_t types;
@end

@implementation GetPrizeReq

- (BOOL) hasPrizeId {
  return !!hasPrizeId_;
}
- (void) setHasPrizeId:(BOOL) value {
  hasPrizeId_ = !!value;
}
@synthesize prizeId;
- (BOOL) hasTypes {
  return !!hasTypes_;
}
- (void) setHasTypes:(BOOL) value {
  hasTypes_ = !!value;
}
@synthesize types;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.prizeId = 0L;
    self.types = 0;
  }
  return self;
}
static GetPrizeReq* defaultGetPrizeReqInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeReq class]) {
    defaultGetPrizeReqInstance = [[GetPrizeReq alloc] init];
  }
}
+ (GetPrizeReq*) defaultInstance {
  return defaultGetPrizeReqInstance;
}
- (GetPrizeReq*) defaultInstance {
  return defaultGetPrizeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPrizeId) {
    return NO;
  }
  if (!self.hasTypes) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrizeId) {
    [output writeInt64:1 value:self.prizeId];
  }
  if (self.hasTypes) {
    [output writeInt32:2 value:self.types];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPrizeId) {
    size += computeInt64Size(1, self.prizeId);
  }
  if (self.hasTypes) {
    size += computeInt32Size(2, self.types);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeReq*) parseFromData:(NSData*) data {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromData:data] build];
}
+ (GetPrizeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromInputStream:input] build];
}
+ (GetPrizeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeReq*)[[[GetPrizeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeReq_Builder*) builder {
  return [[[GetPrizeReq_Builder alloc] init] autorelease];
}
+ (GetPrizeReq_Builder*) builderWithPrototype:(GetPrizeReq*) prototype {
  return [[GetPrizeReq builder] mergeFrom:prototype];
}
- (GetPrizeReq_Builder*) builder {
  return [GetPrizeReq builder];
}
@end

@interface GetPrizeReq_Builder()
@property (retain) GetPrizeReq* result;
@end

@implementation GetPrizeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeReq_Builder*) clear {
  self.result = [[[GetPrizeReq alloc] init] autorelease];
  return self;
}
- (GetPrizeReq_Builder*) clone {
  return [GetPrizeReq builderWithPrototype:result];
}
- (GetPrizeReq*) defaultInstance {
  return [GetPrizeReq defaultInstance];
}
- (GetPrizeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeReq*) buildPartial {
  GetPrizeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeReq_Builder*) mergeFrom:(GetPrizeReq*) other {
  if (other == [GetPrizeReq defaultInstance]) {
    return self;
  }
  if (other.hasPrizeId) {
    [self setPrizeId:other.prizeId];
  }
  if (other.hasTypes) {
    [self setTypes:other.types];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPrizeId:[input readInt64]];
        break;
      }
      case 16: {
        [self setTypes:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPrizeId {
  return result.hasPrizeId;
}
- (int64_t) prizeId {
  return result.prizeId;
}
- (GetPrizeReq_Builder*) setPrizeId:(int64_t) value {
  result.hasPrizeId = YES;
  result.prizeId = value;
  return self;
}
- (GetPrizeReq_Builder*) clearPrizeId {
  result.hasPrizeId = NO;
  result.prizeId = 0L;
  return self;
}
- (BOOL) hasTypes {
  return result.hasTypes;
}
- (int32_t) types {
  return result.types;
}
- (GetPrizeReq_Builder*) setTypes:(int32_t) value {
  result.hasTypes = YES;
  result.types = value;
  return self;
}
- (GetPrizeReq_Builder*) clearTypes {
  result.hasTypes = NO;
  result.types = 0;
  return self;
}
@end

@interface GetPrizeRes ()
@property int32_t status;
@property (retain) NSString* msg;
@end

@implementation GetPrizeRes

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value {
  hasMsg_ = !!value;
}
@synthesize msg;
- (void) dealloc {
  self.msg = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.status = 0;
    self.msg = @"";
  }
  return self;
}
static GetPrizeRes* defaultGetPrizeResInstance = nil;
+ (void) initialize {
  if (self == [GetPrizeRes class]) {
    defaultGetPrizeResInstance = [[GetPrizeRes alloc] init];
  }
}
+ (GetPrizeRes*) defaultInstance {
  return defaultGetPrizeResInstance;
}
- (GetPrizeRes*) defaultInstance {
  return defaultGetPrizeResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasMsg) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeInt32:1 value:self.status];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStatus) {
    size += computeInt32Size(1, self.status);
  }
  if (self.hasMsg) {
    size += computeStringSize(2, self.msg);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetPrizeRes*) parseFromData:(NSData*) data {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromData:data] build];
}
+ (GetPrizeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromInputStream:input] build];
}
+ (GetPrizeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetPrizeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetPrizeRes*)[[[GetPrizeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetPrizeRes_Builder*) builder {
  return [[[GetPrizeRes_Builder alloc] init] autorelease];
}
+ (GetPrizeRes_Builder*) builderWithPrototype:(GetPrizeRes*) prototype {
  return [[GetPrizeRes builder] mergeFrom:prototype];
}
- (GetPrizeRes_Builder*) builder {
  return [GetPrizeRes builder];
}
@end

@interface GetPrizeRes_Builder()
@property (retain) GetPrizeRes* result;
@end

@implementation GetPrizeRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetPrizeRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetPrizeRes_Builder*) clear {
  self.result = [[[GetPrizeRes alloc] init] autorelease];
  return self;
}
- (GetPrizeRes_Builder*) clone {
  return [GetPrizeRes builderWithPrototype:result];
}
- (GetPrizeRes*) defaultInstance {
  return [GetPrizeRes defaultInstance];
}
- (GetPrizeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetPrizeRes*) buildPartial {
  GetPrizeRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetPrizeRes_Builder*) mergeFrom:(GetPrizeRes*) other {
  if (other == [GetPrizeRes defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetPrizeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetPrizeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (GetPrizeRes_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (GetPrizeRes_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (GetPrizeRes_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (GetPrizeRes_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
@end

